<?php
// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Session
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

if (!isset($_SESSION['email'])) {
    header("Location: login.php?error=You must login to access this page.");
    exit();
}

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å Session
$email = $_SESSION['email'];
$username = $_SESSION['username'] ?? '';

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
function getDatabaseConnection() {
    $host = "localhost";
    $user = "root";
    $password = "";
    $database = "mydatabase";

    $conn = new mysqli($host, $user, $password, $database);
    if ($conn->connect_error) {
        throw new Exception("‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . $conn->connect_error);
    }
    return $conn;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÅ‡∏°‡∏ï‡∏ä‡πå (‡∏≠‡∏≤‡∏¢‡∏∏‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
function calculateMatchPercentage($user_age, $match_age) {
    $age_diff = abs($user_age - $match_age);
    $percentage = max(100 - ($age_diff * 5), 0);
    return $percentage;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏®‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
function calculateMatchPercentageWithGender($user_age, $match_age, $user_interest, $match_gender) {
    $age_diff = abs($user_age - $match_age);
    $percentage = max(100 - ($age_diff * 5), 0);
    // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏ö‡∏ô‡∏±‡∏™ 20 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    if ($user_interest === $match_gender) {
        $percentage += 20;
    }
    return min($percentage, 100);
}

try {
    $conn = getDatabaseConnection();

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    $sql_user = "SELECT profile_pictures, gender, interest, dob FROM profile1 WHERE email = ?";
    $stmt_user = $conn->prepare($sql_user);
    if (!$stmt_user) {
        throw new Exception("‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . $conn->error);
    }
    $stmt_user->bind_param("s", $email);
    $stmt_user->execute();
    $result_user = $stmt_user->get_result();

    if ($result_user->num_rows > 0) {
        $current_user = $result_user->fetch_assoc();
        $user_picture = $current_user['profile_pictures'];
        $user_gender = $current_user['gender'];
        $user_interest = $current_user['interest'];

        // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
        $upload_path = "";
        $default_picture = $upload_path . "default_profile.jpg";
        $profile_picture_path = (!empty($user_picture) && file_exists(__DIR__ . "/" . $upload_path . $user_picture))
    ? $upload_path . $user_picture
    : $default_picture;

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        if (!empty($current_user['dob'])) {
            $dob = new DateTime($current_user['dob']);
            $now = new DateTime();
            $user_age = $now->diff($dob)->y;
        } else {
            $user_age = 0;
        }
    } else {
        echo "<p style='color: red;'>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>";
        exit();
    }
    $stmt_user->close();

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Matches
    // ‡πÉ‡∏ä‡πâ LIKE ? ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö wildcard
    $sql_matches = "SELECT id, name, TIMESTAMPDIFF(YEAR, dob, CURDATE()) AS age, gender, profile_pictures, interest
                    FROM profile1
                    WHERE gender LIKE ? AND email != ?";
    $stmt_matches = $conn->prepare($sql_matches);
    if (!$stmt_matches) {
        throw new Exception("‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á SQL ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: " . $conn->error);
    }

    // ‡∏ñ‡πâ‡∏≤ interest ‡πÄ‡∏õ‡πá‡∏ô male/female ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏á‡∏±‡πâ‡∏ô‡πÉ‡∏ä‡πâ '%'
    $desired_gender = ($user_interest === 'male' || $user_interest === 'female') ? $user_interest : '%';

    $stmt_matches->bind_param("ss", $desired_gender, $email);
    $stmt_matches->execute();
    $result_matches = $stmt_matches->get_result();

    $matches = [];
    while ($row = $result_matches->fetch_assoc()) {
        $user_pictures = explode(',', $row['profile_pictures']);
        $match_picture = trim($user_pictures[0]);

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì match_percentage ‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡πÇ‡∏ö‡∏ô‡∏±‡∏™
        $match_percentage = calculateMatchPercentageWithGender($user_age, $row['age'], $user_interest, $row['gender']);

        $matches[] = [
            'id' => $row['id'], // ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ä‡∏ó
            'name' => $row['name'],
            'age' => $row['age'],
            'gender' => $row['gender'],
            'image' => (!empty($match_picture) && file_exists($upload_path . $match_picture))
                        ? $upload_path . $match_picture
                        : $default_picture,
            'interest' => $row['interest'],
            'match_percentage' => $match_percentage
        ];
    }

    $stmt_matches->close();
    $conn->close();

} catch (Exception $e) {
    echo "<p style='color: red;'>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . htmlspecialchars($e->getMessage()) . "</p>";
    exit();
}

?>


  <script>
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ global ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏¢‡∏π‡∏™‡πÄ‡∏ã‡∏≠‡∏£‡πå
    let myProfilePic = "<?= htmlspecialchars($profile_picture_path) ?>";
  </script>

  <script>
      function askForLocation() {
          if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(saveLocation, showError);
          } else {
              alert("‚ùå ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
          }
      }

      function saveLocation(position) {
          let latitude = position.coords.latitude;
          let longitude = position.coords.longitude;

          // ‡∏™‡πà‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏õ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ fetch
          fetch("update_location.php", {
              method: "POST",
              headers: { "Content-Type": "application/x-www-form-urlencoded" },
              body: `latitude=${latitude}&longitude=${longitude}`
          })
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  alert("‚úÖ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
              } else {
                  alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏î‡πâ: " + data.error);
              }
          })
          .catch(error => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error));
      }

      function showError(error) {
          switch (error.code) {
              case error.PERMISSION_DENIED:
                  alert("‚õî ‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
                  break;
              case error.POSITION_UNAVAILABLE:
                  alert("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ");
                  break;
              case error.TIMEOUT:
                  alert("‚è≥ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏û‡∏¥‡∏Å‡∏±‡∏î");
                  break;
              case error.UNKNOWN_ERROR:
                  alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏");
                  break;
          }
      }
  </script>

  <!-- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å askForLocation() ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ -->
  <body onload="askForLocation()"> 
      
  </body>

  <!DOCTYPE html>
  <html lang="en">
  <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link rel="stylesheet" href="style.css">
      <title>Match Page</title>
  </head>
  <body>
      
  <script>
      let matches = <?= json_encode($matches) ?>; // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PHP ‡πÑ‡∏õ‡∏¢‡∏±‡∏á JavaScript
  </script>
  <style>
         /* ---- üåü Global Styles ---- */
body {
    font-family: "Poppins", sans-serif;
    margin: 0;
    background: linear-gradient(135deg, #ff9a9e, #fad0c4);
    display: flex;
    height: 100vh;
    color: #333;
    overflow: hidden;
}

/* ---- üåü Sidebar ---- */
.sidebar {
    width: 300px;
    background: rgba(34, 34, 34, 0.85); /* Glass effect */
    color: white;
    display: flex;
    flex-direction: column;
    backdrop-filter: blur(10px);
    box-shadow: 5px 0 20px rgba(0, 0, 0, 0.2);
}

/* ---- üåü Sidebar Header ---- */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    background: linear-gradient(90deg, #FF4E50, #FC913A);
    color: white;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    border-bottom: 3px solid rgba(255, 255, 255, 0.2);
}

.profile-header {
    display: flex;
    align-items: center;
    background: none;
    border: none;
    padding: 0;
    color: inherit;
    font: inherit;
    cursor: pointer;
}

.profile-header img {
    width: 65px;
    height: 65px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 15px;
    border: 3px solid white;
    transition: transform 0.3s ease-in-out;
}

.profile-header img:hover {
    transform: scale(1.1);
}

.profile-header .username {
    font-size: 22px;
    font-weight: bold;
}

/* ---- üåü Matches Container ---- */
.matches-container {
    display: flex;
    flex-direction: row;
    padding: 15px;
    overflow-x: auto;
    gap: 10px;
}

.match-item {
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    border-radius: 10px;
    padding: 10px;
    cursor: pointer;
    transition: transform 0.3s, background-color 0.3s;
}

.match-item:hover {
    transform: scale(1.05);
    background-color: rgba(255, 255, 255, 0.2);
}

.match-item img {
    border-radius: 50%;
    width: 45px;
    margin-right: 10px;
    border: 2px solid white;
}

/* ---- üåü Profile Section ---- */
.profile {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
}

/* ---- üåü Profile Card ---- */
.profile-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding: 30px;
    width: 450px;
    height: 650px;
    border-radius: 30px;
    background: rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(15px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);
    border: 5px solid rgba(255, 255, 255, 0.4);
    text-align: center;
    transition: transform 0.3s ease-in-out;
}

.profile-card:hover {
    transform: scale(1.02);
}

.profile-card img {
    width: 90%;
    height: 320px;
    object-fit: cover;
    border-radius: 20px;
    margin-bottom: 15px;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
}

.profile-card h3 {
    margin: 15px 0;
    font-size: 2.5em;
    font-weight: bold;
    color: #222;
}

.profile-card p {
    margin: 10px 0;
    color: #555;
    font-size: 1.2em;
}

/* ---- üåü Match Percentage ---- */
#profile-match {
    font-size: 1.4em;
    font-weight: bold;
    color: #FF4E50;
}

/* ---- üåü Action Buttons ---- */
.actions {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    gap: 20px;
}

.actions button {
    background-color: white;
    border: 2px solid #ddd;
    border-radius: 50%;
    width: 85px;
    height: 85px;
    font-size: 28px;
    cursor: pointer;
    transition: transform 0.3s, background-color 0.3s;
}

.actions button:hover {
    background-color: #f1f1f1;
    transform: scale(1.2);
}

.dislike {
    color: #ff5a60;
}

.like {
    color: #4caf50;
}

.superlike {
    color: #2196f3;
}

/* ---- üåü Match Popup ---- */
.match-popup {
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: none;
}

.match-popup-content {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 350px;
    border-radius: 20px;
    text-align: center;
    padding: 30px;
    background: linear-gradient(135deg, #FF4E50, #FC913A);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    animation: fadeIn 0.5s ease-in-out;
}

/* ---- üåü Popup Close Button ---- */
.close-popup {
    position: absolute;
    top: 15px;
    right: 15px;
    font-size: 28px;
    font-weight: bold;
    color: white;
    background: none;
    border: none;
    cursor: pointer;
}

/* ---- üåü Keyframe Animations ---- */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -55%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}

@keyframes fadeOut {
    from {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
    to {
        opacity: 0;
        transform: translate(-50%, -45%);
    }
}


/* ‚úÖ ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå */
.match-alert {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 0, 0, 0.9);
    color: white;
    padding: 25px;
    border-radius: 15px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
    text-align: center;
    display: none;
    z-index: 1000;
    width: 320px;
    max-width: 90%;
    font-family: "Poppins", sans-serif;
}

/* ‚úÖ ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ */
.match-alert-content {
    padding: 15px;
}

/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏Å‡∏•‡∏á */
.match-alert button {
    background: white;
    color: red;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s, color 0.3s;
}

.match-alert button:hover {
    background: #ffdddd;
    color: darkred;
}

  </style>


      <script>
          function swipe(direction) {
      const xhr = new XMLHttpRequest();
      xhr.open("POST", "fetch_random_user.php", true);
      xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      xhr.onload = function () {
          if (xhr.status === 200) {
              const response = JSON.parse(xhr.responseText);
              if (response.success) {
                  document.getElementById("profile-image").src = response.profile_pictures || "default_profile.jpg";
                  document.getElementById("profile-name").textContent = `${response.name}, ${response.age} ‡∏õ‡∏µ`;
                  document.getElementById("profile-gender-match").textContent = response.gender;
                  document.getElementById("profile-interest").textContent = `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à: ${response.interest}`;
              } else {
                  document.getElementById("profile-name").textContent = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå";
                  document.getElementById("profile-gender-match").textContent = "";
                  document.getElementById("profile-interest").textContent = "";
              }
          }
      };
      xhr.send(`action=${direction}`);
  }
    
      </script>
      <div class="sidebar">
          <div class="header">
              <button class="profile-header" onclick="window.location.href='match.php'">
              <img src="<?= htmlspecialchars($profile_picture_path) ?>" alt="Profile Picture of <?= htmlspecialchars($username) ?>">
                  <span class="username"><?= htmlspecialchars($username) ?></span>
              </button>
              <div class="icons">
                  
                
  <script>
      function goToDating() {
          window.location.href = 'Dating.html'; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå Dating.html
      }

      let matches = <?= json_encode($matches) ?>; // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PHP
  let currentIndex = 0; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÅ‡∏£‡∏Å

  function selectMatch(index) {
      console.log("Selected Match Index:", index); // Debug Index
      console.log("Selected Match Data:", matches[index]); // Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå

      if (matches[index]) {
          const match = matches[index];
          document.getElementById("profile-image").src = match.image || "default_profile.jpg";
          document.getElementById("profile-name").textContent = `${match.name}, ${match.age} ‡∏õ‡∏µ`;
          document.getElementById("profile-gender").textContent = `‡πÄ‡∏û‡∏®: ${match.gender}`;
          document.getElementById("profile-interest").textContent = `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à: ${match.interest}`;
      } else {
          console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô matches[index]");
          document.getElementById("profile-name").textContent = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå";
          document.getElementById("profile-gender").textContent = "";
          document.getElementById("profile-interest").textContent = "";
      }
  }



  function swipe(direction) {
      console.log("Swiping:", direction); // Debug Direction
      currentIndex++;

      if (currentIndex >= matches.length) {
          currentIndex = 0; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏´‡∏≤‡∏Å‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏π‡πà‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
      }

      showMatch(); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÉ‡∏´‡∏°‡πà
  }




  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏à‡∏≤‡∏Å PHP
  fetch('fetch_random_user.php') // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô endpoint ‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PHP
      .then(response => response.json())
      .then(data => {
          matches = data; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô matches
          showMatch(); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÅ‡∏£‡∏Å
      });

  </script>
              </div>
          </div>
          <h2>Messages</h2>
          
         
  <div class="matches-container">
      <?php foreach ($matches as $index => $match): ?>
          <div class="match-item" onclick="selectMatch(<?= $index ?>)">
          <<img src="<?= htmlspecialchars($profile_picture_path) ?>" 
     alt="<?= htmlspecialchars($match['name']) ?>" 
     onerror="this.onerror=null; this.src='<?= $default_picture ?>';">

              <span><?= htmlspecialchars($match['name']) ?></span>
          </div>
      <?php endforeach; ?>
  </div>




      </div>
      <div class="profile">
      <div class="profile">
      <div class="profile-card">
      <img id="profile-image" src="default_profile.jpg" alt="Profile Picture">
      <h3 id="profile-name">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡∏≠‡∏≤‡∏¢‡∏∏</h3>
      <p id="profile-gender">‡πÄ‡∏û‡∏®: </p>
      <p id="profile-match" style="color: red; font-weight: bold;">üíò ‡πÅ‡∏°‡∏ï‡∏ä‡πå 0%</p>
      <div class="actions">
          <button class="dislike" onclick="swipe('left')">‚úñ</button>
          <button class="superlike" onclick="swipe('superlike')">‚òÖ</button>
          <button class="like" onclick="swipe('right')">‚ù§</button>
      </div>
  </div>
  <!-- Popup "It's a match!" -->
  <div id="match-popup" class="match-popup">
    <div class="match-popup-content">
      <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î Popup (x) -->
      <button id="close-popup" class="close-popup">&times;</button>
      
      <!-- ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà -->
      <h2 id="match-popup-title" class="match-title">It's a match!</h2>
      
      <!-- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡πà‡∏≠‡∏¢ -->
      <p id="match-popup-message" class="match-subtitle">You matched with ...</p>
      
      <!-- ‡∏£‡∏π‡∏õ 2 ‡∏£‡∏π‡∏õ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Ç‡πâ‡∏≤‡∏á: ‡∏£‡∏π‡∏õ‡πÄ‡∏£‡∏≤ + ‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå -->
      <div class="match-photos">
        <!-- ‡∏£‡∏π‡∏õ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏≤ -->
        <img id="myPhoto" src="uploads/my_image.jpg" alt="My Photo">
        
        <!-- ‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå -->
        <img id="matchPhoto" src="default_profile.jpg" alt="Match Photo">
      </div>
      
      <!-- ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏ß‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á + ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ ‡πÅ‡∏¢‡∏Å 2 ‡∏ö‡∏•‡πá‡∏≠‡∏Å -->
      <div class="match-message-box">
        <!-- ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô: ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á -->
        <div class="message-input-container">
        <input id="matchMessageInput" type="text" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏™‡πà‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥...">
          <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° -->
  <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° -->
  <button id="sendMessageBtn" class="send-btn">‡∏™‡πà‡∏á</button>
  <script>
  let myProfilePic = "<?= htmlspecialchars($profile_picture_path) ?>";
  console.log("üîç My Profile Picture Path:", myProfilePic);
</script>

  <script>
  document.getElementById("sendMessageBtn").onclick = function() {
    const msgInput = document.getElementById("matchMessageInput");
    const msg = msgInput.value.trim();
    
    if (msg) {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå send_message.php ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å/‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      fetch("send_message.php", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded" },
    body: "message=" + encodeURIComponent(msg) + "&match_id=" + match.id
  })

      .then(response => response.json())  // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON
      .then(data => {
        if (data.success) {
          // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
          msgInput.value = "";
          // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏ó ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏≠‡∏∑‡πà‡∏ô
          window.location.href = "chat.php";
        } else {
          alert("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + data.error);
        }
      })
      .catch(error => console.error("Error sending message:", error));
    }
  };

  </script>


        </div>
        
        <!-- ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á: ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ -->
        <div class="emoji-container">
          <button class="emoji-btn" data-emoji="üëã">üëã</button>
          <button class="emoji-btn" data-emoji="üòä">üòä</button>
          <button class="emoji-btn" data-emoji="‚ù§Ô∏è">‚ù§Ô∏è</button>
          <button class="emoji-btn" data-emoji="üòç">üòç</button>
        </div>

      </div>
      
    </div>
  </div>


<!-- ‚úÖ Popup ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå -->
<div id="no-match-alert" class="match-alert">
    <button class="close-btn" onclick="closeMatchAlert()">‚úñ</button>
    <h2>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏ï‡∏ä‡πå</h2>
    <p>‡∏Ñ‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏•‡∏±‡∏ö ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏ï‡πà‡∏≥‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ</p>
    <button onclick="closeMatchAlert()">‡∏ï‡∏Å‡∏•‡∏á</button>
</div>


    <style>
  /* ‡∏ï‡∏±‡∏ß Overlay ‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏™‡∏µ‡∏î‡∏≥‡πÇ‡∏õ‡∏£‡πà‡∏á) */
  .match-popup {
    position: fixed;
    z-index: 9999;
    left: 0; 
    top: 0;
    width: 100%; 
    height: 100%;
    background-color: rgba(0,0,0,0.5);
    display: none; /* ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ ‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏´‡πâ JS ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô display: flex; ‡∏´‡∏£‡∏∑‡∏≠ block; */
  }

  /* ‡∏Å‡∏•‡πà‡∏≠‡∏á Popup */
  .match-popup-content {
    position: absolute;
    left: 60%;
    top: 40%;
    transform: translate(-50%, -50%);
    width: 320px;
    border-radius: 20px;
    text-align: center;
    padding: 40px 20px;
    background: linear-gradient(180deg, #FF4E50 0%, #FC913A 100%);
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
  }

  /* ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î (x) ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏ß‡∏≤ */
  .close-popup {
    position: absolute;
    top: 20px; 
    right: 20px;
    font-size: 28px;
    font-weight: bold;
    color: #ffffff;
    background: none;
    border: none;
    cursor: pointer;
  }

  /* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏ç‡πà "It's a match!" */
  .match-title {
    font-size: 36px;
    color: #ffffff;
    font-weight: bold;
    margin-bottom: 10px;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
  }

  /* ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡πà‡∏≠‡∏¢ "You matched with ..." */
  .match-subtitle {
    font-size: 20px;
    color: #ffffff;
    margin-bottom: 20px;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
  }

  /* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ 2 ‡∏£‡∏π‡∏õ (‡πÄ‡∏£‡∏≤ + ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå) */
  .match-photos {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
  }

  .match-photos img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 50%;
    border: 3px solid #fff;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  }

  /* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏ß‡∏° (‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á + ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥) */
  .match-message-box {
    display: flex;
    flex-direction: column; /* ‡∏à‡∏±‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á */
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
  }

  /* ‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô: ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á */
  .message-input-container {
    display: flex;
    align-items: center;
    gap: 6px;
    width: 100%; /* ‡πÉ‡∏´‡πâ‡∏Å‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å */
  }

  .message-input-container input {
    flex: 1;
    padding: 8px 12px;
    border-radius: 20px;
    border: none;
    outline: none;
    font-size: 14px;
    background-color: #fff;
    color: #333;
  }

  .message-input-container input::placeholder {
    color: #999;
  }

  /* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á (Send) */
  .send-btn {
    background: #FF4E50; /* ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö */
    color: #fff;
    border: none;
    border-radius: 20px;
    padding: 8px 16px;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    transition: transform 0.2s;
  }

  .send-btn:hover {
    transform: scale(1.05);
  }

  /* ‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏á: ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ */
  .emoji-container {
    display: flex;
    gap: 6px;
  }

  .emoji-btn {
    background: #fff;
    color: #333;
    font-size: 18px; /* ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ */
    border: none;
    border-radius: 20px;
    padding: 0 10px;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    transition: transform 0.2s;
  }

  .emoji-btn:hover {
    transform: scale(1.1);
  }

  /* ‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏ä‡∏ó" */
  .start-chat-btn {
    background: #FC913A;
    color: #fff;
    border: none;
    border-radius: 50px;
    padding: 12px 24px;
    font-size: 16px;
    cursor: pointer;
    box-shadow: 0 3px 8px rgba(0,0,0,0.2);
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .start-chat-btn:hover {
    transform: scale(1.05);
    box-shadow: 0 5px 12px rgba(0,0,0,0.3);
  }

  /* Chat Modal */
  .chat-modal {
    display: none;
    position: fixed;
    z-index: 9999;
    left: 0; 
    top: 0;
    width: 100%; 
    height: 100%;
    background-color: rgba(0,0,0,0.5);
  }

  .chat-modal-content {
    position: relative;
    margin: 5% auto;
    background: #fff;
    width: 400px;
    padding: 20px;
    text-align: left;
    border-radius: 10px;
  }

  .close-chat {
    position: absolute;
    right: 10px; 
    top: 10px;
    font-size: 24px;
    cursor: pointer;
  }

  .chat-messages {
    width: 100%;
    height: 300px;
    border: 1px solid #ddd;
    overflow-y: auto;
    margin-bottom: 10px;
  }

  .chat-input {
    display: flex;
    gap: 5px;
  }


  /* (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°) ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Popup */
  .match-photos {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
  }

  .match-photos img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(0,0,0,0.2);
    border: 3px solid #fff;
  }

  /* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏ç‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏£‡∏ß‡∏° (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£) */
  .match-message-box {
    display: flex;
    flex-direction: column; /* ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏π‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á */
    align-items: center;    /* ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á */
    gap: 10px;             /* ‡πÄ‡∏ß‡πâ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÑ‡∏ü‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏ñ‡∏ß */
    margin-bottom: 20px;
  }

  /* ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå + ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á (‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏ñ‡∏ß‡∏ö‡∏ô) */
  .message-input-container {
    display: flex;
    align-items: center;
    gap: 6px; 
  }

  /* ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå */
  .message-input-container input {
    flex: 1;
    padding: 8px 12px;
    border-radius: 20px;
    border: none;
    outline: none;
    font-size: 14px;
    background-color: #fff;
    color: #333;
  }
  .message-input-container input::placeholder {
    color: #999;
  }

  /* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á */
  .send-btn {
    background: #FF4E50;  /* ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö */
    color: #fff;
    border: none;
    border-radius: 20px;
    padding: 8px 16px;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    transition: transform 0.2s;
  }
  .send-btn:hover {
    transform: scale(1.05);
  }

  /* ‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡πÄ‡∏ô‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ */
  .emoji-container {
    display: flex;
    gap: 25px;
    justify-content: center; /* ‡∏à‡∏±‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô */
    margin-top: 10px;        /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ */
  }

  /* ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ */
  .emoji-btn {
    background: rgba(255, 255, 255, 0.7); /* ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏á‡∏•‡∏á */
    color: #333;
    font-size: 18px;
    border: none;
    border-radius: 24px;
    padding: 0 15px;
    cursor: pointer;
    box-shadow: 0 2px 9px rgba(0,0,0,0.15);
    transition: transform 0.2s;
  }
  .emoji-btn:hover {
    transform: scale(1.1);
  }
/* ‚úÖ ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (Glassmorphism + Neumorphism) */
.match-alert {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.65); /* ‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡∏Ç‡∏∂‡πâ‡∏ô */
    padding: 45px;
    border-radius: 18px;
    backdrop-filter: blur(12px) saturate(200%); /* ‡πÄ‡∏û‡∏¥‡πà‡∏° Saturation ‡πÉ‡∏´‡πâ‡∏™‡∏î‡∏Ç‡∏∂‡πâ‡∏ô */
    box-shadow: 10px 10px 25px rgba(0, 0, 0, 0.3), 
                -10px -10px 25px rgba(255, 255, 255, 0.15);
    text-align: center;
    display: none;
    z-index: 1000;
    width: 400px;
    max-width: 90%;
    font-family: "Poppins", sans-serif;
    border: 2px solid rgba(255, 255, 255, 0.3);
    animation: fadeIn 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
}

/* ‚úÖ ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */
.match-alert h2 {
    font-size: 26px;
    font-weight: bold;
    color: #ff4d4d;
    margin-bottom: 20px;
    text-shadow: 3px 3px 10px rgba(255, 255, 255, 0.2);
    letter-spacing: 1px;
}

/* ‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ */
.match-alert p {
    font-size: 18px;
    color: #ffffff;
    opacity: 0.95;
    line-height: 1.6;
    font-weight: 400;
    text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
}

/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏Å‡∏•‡∏á */
.match-alert button {
    background: linear-gradient(135deg, #ff4d4d, #ff7878);
    color: white;
    border: none;
    padding: 15px 40px;
    font-size: 18px;
    border-radius: 12px;
    cursor: pointer;
    box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease-in-out;
    font-weight: bold;
}

.match-alert button:hover {
    background: linear-gradient(135deg, #d60000, #ff4d4d);
    transform: scale(1.1);
    box-shadow: 6px 6px 18px rgba(0, 0, 0, 0.35);
}

/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î (X) */
.match-alert .close-btn {
    position: absolute;
    top: 12px;
    right: 12px;
    font-size: 24px;
    color: #ff4d4d;
    background: none;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.match-alert .close-btn:hover {
    color: #d60000;
    transform: rotate(90deg) scale(1.3);
}

/* ‚úÖ ‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translate(-50%, -60%) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

    </style>
  <script>



      // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ matches ‡∏à‡∏≤‡∏Å PHP
      let matches = <?= json_encode($matches) ?>; 
      let currentIndex = 0; // index ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå

      function initPage() {
        askForLocation(); // ‡∏Ç‡∏≠‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        showMatch();      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÅ‡∏£‡∏Å
      }

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
      function showMatch() {
        if (matches.length === 0 || currentIndex >= matches.length) {
          // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå
          document.getElementById("profile-image").src = "default_profile.jpg";
          document.getElementById("profile-name").textContent = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå";
          document.getElementById("profile-gender").textContent = "";
          document.getElementById("profile-match").textContent = "";
          return;
        }
        const match = matches[currentIndex];
        document.getElementById("profile-image").src = match.image || "default_profile.jpg";
        document.getElementById("profile-name").textContent = `${match.name}, ${match.age} ‡∏õ‡∏µ`;
        document.getElementById("profile-gender").textContent = `‡πÄ‡∏û‡∏®: ${match.gender}`;
        document.getElementById("profile-match").textContent = `üíò ‡πÅ‡∏°‡∏ï‡∏ä‡πå ${match.match_percentage}%`;
      }

      // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Dislike/Like/Superlike
      function swipe(direction) {
        const match = matches[currentIndex];
        console.log("Swiped:", direction);

        // ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Like (direction === 'right') ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå > 50 => Popup
        if (direction === 'right' && match.match_percentage > 50) {
          showMatchPopup(match);
        }

        // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á match ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        if (currentIndex < matches.length - 1) {
          currentIndex++;
        } else {
          currentIndex = 0;
        }
        showMatch();
      }
      function showMatchPopup(match) {
    if (!match || match.match_percentage < 50) {
        alert("‚ùå ‡πÑ‡∏°‡πà‡πÅ‡∏°‡∏ï‡∏Å‡∏±‡∏ö " + match.name + "! ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
        return; // ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á Popup
    }

    console.log("üéâ It's a Match! ‡∏Å‡∏±‡∏ö", match.name);
    
    let userImage = myProfilePic && myProfilePic !== "default_profile.jpg"
        ? `http://127.0.0.1/project/${myProfilePic}`
        : "http://127.0.0.1/project/default_profile.jpg";

    let matchImage = match.image ? `http://127.0.0.1/project/${match.image}` : "http://127.0.0.1/project/default_profile.jpg";

    document.getElementById("myPhoto").src = userImage;
    document.getElementById("matchPhoto").src = matchImage;

    document.getElementById("match-popup").style.display = "flex";


    // ‡∏õ‡∏¥‡∏î popup
    document.getElementById("close-popup").onclick = function() {
        document.getElementById("match-popup").style.display = "none";
    };
}



      // ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÅ‡∏ä‡∏ó
      function openChatWindow(match) {
        document.getElementById("chat-partner-name").textContent = match.name;
        document.getElementById("chat-modal").style.display = "block";

        // ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î
        document.getElementById("close-chat").onclick = function() {
          document.getElementById("chat-modal").style.display = "none";
        }

        // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        loadChatHistory(match);

        // ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        document.getElementById("send-chat-btn").onclick = function() {
          sendChatMessage(match);
        }
      }
      function loadChatHistory(match) {
      fetch(`chat_history.php?match_id=${match.id}`)
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  let chatMessages = document.getElementById("chat-messages");
                  chatMessages.innerHTML = ""; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà

                  data.messages.forEach(msg => {
                      let messageElement = document.createElement("div");
                      messageElement.className = (msg.sender === "me") ? "chat-message user" : "chat-message match";
                      messageElement.textContent = msg.message;
                      chatMessages.appendChild(messageElement);
                  });

                  // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                  chatMessages.scrollTop = chatMessages.scrollHeight;
              } else {
                  console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ä‡∏ó:", data.error);
              }
          })
          .catch(err => console.error("Error loading chat history:", err));
  }

      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
      function sendChatMessage(match) {
        let inputBox = document.getElementById("chat-input-box");
        let message = inputBox.value.trim();
        if (!message) return;

        fetch("send_message.php", {
          method: "POST",
          headers: {"Content-Type": "application/x-www-form-urlencoded"},
          body: `match_id=${match.id}&message=${encodeURIComponent(message)}`
        })
        .then(r => r.json())
        .then(data => {
          if (data.success) {
            inputBox.value = "";
            loadChatHistory(match);
          } else {
            alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ: " + data.error);
          }
        })
        .catch(err => console.error("Error sending message:", err));
      }

      // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏û‡∏¥‡∏Å‡∏±‡∏î
      function askForLocation() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(saveLocation, showError);
        } else {
          alert("‚ùå ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
        }
      }
      function saveLocation(position) {
        let latitude = position.coords.latitude;
        let longitude = position.coords.longitude;
        fetch("update_location.php", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: `latitude=${latitude}&longitude=${longitude}`
        })
        .then(r => r.json())
        .then(data => {
          if (data.success) {
            alert("‚úÖ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
          } else {
            alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏î‡πâ: " + data.error);
          }
        })
        .catch(error => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error));
      }
      function showError(error) {
        switch (error.code) {
          case error.PERMISSION_DENIED:
            alert("‚õî ‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
            break;
          case error.POSITION_UNAVAILABLE:
            alert("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ");
            break;
          case error.TIMEOUT:
            alert("‚è≥ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏û‡∏¥‡∏Å‡∏±‡∏î");
            break;
          case error.UNKNOWN_ERROR:
            alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏");
            break;
        }
      }
    </script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const sendButton = document.querySelector("#sendMessageBtn");
    const messageInput = document.querySelector("#matchMessageInput");
    const matchId = document.querySelector("#matchId").value; // ‡∏î‡∏∂‡∏á match_id ‡∏à‡∏≤‡∏Å input hidden

    sendButton.addEventListener("click", function () {
        let message = messageInput.value.trim();

        if (message !== "") {
            let formData = new FormData();
            formData.append("match_id", matchId);
            formData.append("message", message);

            fetch("send_message.php", {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
                    window.location.href = `chat.php?match_id=${matchId}`; // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏ó
                } else {
                    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + data.error);
                }
            })
            .catch(error => console.error("Error:", error));
        } else {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á");
        }
    });
});

</script>



  <script>
    function selectMatch(index) {
      if (matches.length === 0) {
          document.getElementById("profile-image").src = "default_profile.jpg";
          document.getElementById("profile-name").textContent = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå";
          document.getElementById("profile-gender").textContent = "";
          document.getElementById("profile-match").textContent = "";
          return;
      }

      const match = matches[index];
      document.getElementById("profile-image").src = match.image || "default_profile.jpg";
      document.getElementById("profile-name").textContent = `${match.name}, ${match.age} ‡∏õ‡∏µ`;
      document.getElementById("profile-gender").textContent = `‡πÄ‡∏û‡∏®: ${match.gender}`;
      document.getElementById("profile-match").textContent = `üíò ‡πÅ‡∏°‡∏ï‡∏ä‡πå ${match.match_percentage}%`;
  }


  let currentIndex = 0; // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÅ‡∏£‡∏Å

  function showMatch() {
      if (matches.length === 0 || currentIndex >= matches.length) {
          document.getElementById("profile-image").src = "default_profile.jpg";
          document.getElementById("profile-name").textContent = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå";
          document.getElementById("profile-gender").textContent = "";
          document.getElementById("profile-match").textContent = "";
          return;
      }

      const match = matches[currentIndex];
      console.log("üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå:", match); // Debugging

      let profileImageSrc = match.image ? match.image : "default_profile.jpg";
      let ageText = match.age > 0 ? match.age + " ‡∏õ‡∏µ" : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏¢‡∏∏";

      document.getElementById("profile-image").src = profileImageSrc;
      document.getElementById("profile-name").textContent = `${match.name}, ${ageText}`;
      document.getElementById("profile-gender").textContent = `‡πÄ‡∏û‡∏®: ${match.gender}`;
      document.getElementById("profile-match").textContent = `üíò ‡πÅ‡∏°‡∏ï‡∏ä‡πå ${match.match_percentage}%`;
  }
// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå
function showNoMatchAlert() {
    document.getElementById("no-match-alert").style.display = "block";
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
function closeMatchAlert() {
    document.getElementById("no-match-alert").style.display = "none";
}

// ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏°‡∏ï‡∏ä‡πå
function swipe(direction) {
    const match = matches[currentIndex];
    console.log("Swiped:", direction);

    if (direction === 'right' && match.match_percentage > 50) {
        showMatchPopup(match);
    } else if (direction === 'right' && match.match_percentage <= 50) {
        showNoMatchAlert(); // ‚¨ÖÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏≤‡∏Å‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    }

    // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏π‡πà‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    if (currentIndex < matches.length - 1) {
        currentIndex++;
    } else {
        currentIndex = 0;
    }
    showMatch();
}




    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤
  showMatch();


  function loadMatches() {
      fetch("match.php")
          .then(response => response.json())
          .then(data => {
              if (data.success) {
                  let matches = data.matches;
                  if (matches.length > 0) {
                      let match = matches[0]; // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
                      document.getElementById("profile-image").src = match.image;
                      document.getElementById("profile-name").textContent = `${match.name}, ${match.age} ‡∏õ‡∏µ`;
                      document.getElementById("profile-gender").textContent = `‡πÄ‡∏û‡∏®: ${match.gender}`;
                      document.getElementById("profile-match").textContent = `üíò ‡πÅ‡∏°‡∏ï‡∏ä‡πå ${match.match_percentage}%`;
                  } else {
                      document.getElementById("profile-name").textContent = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå";
                      document.getElementById("profile-gender").textContent = "";
                      document.getElementById("profile-match").textContent = "";
                  }
              }
          })
          .catch(error => console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error));
  }

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤
  window.onload = loadMatches;


  function calculateMatchPercentage($user_age, $match_age) {
      $age_diff = abs($user_age - $match_age);
      $percentage = max(100 - ($age_diff * 5), 0);
      return $percentage;
  }
  function recordMatch(match) {
      console.log("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå user2 =", match.id, " ‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á matches");

      fetch("save_match.php", {
          method: "POST",
          headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: "match_id=" + encodeURIComponent(match.id)
      })
      .then(response => response.json())
      .then(data => {
          console.log("üîç Response ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", data);
          if (data.success) {
              console.log("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

              if (data.match) {
                  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á showMatchPopup()
                  showMatchPopup({
                      name: data.match_name,
                      image: data.match_picture,
                      myName: data.user_name,
                      myImage: data.user_picture
                  });
              } else {
                  console.log("üëç ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ Like ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏µ‡∏Å‡∏ù‡πà‡∏≤‡∏¢ Like ‡∏Ñ‡∏∑‡∏ô");
              }
          } else {
              console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", data.error);
          }
      })
      .catch(err => {
          console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏ï‡∏ä‡πå:", err);
      });
  }



  function showMatchPopup(match) {
    if (!match || match.match_percentage < 50) {
        document.getElementById("match-alert-text").textContent = "‚ùå ‡πÑ‡∏°‡πà‡πÅ‡∏°‡∏ï‡∏Å‡∏±‡∏ö " + match.name + "! ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà";
        document.getElementById("match-alert").style.display = "block";
        return;
    }

    let userImage = myProfilePic && myProfilePic !== "default_profile.jpg"
        ? `http://127.0.0.1/project/${myProfilePic}`
        : "http://127.0.0.1/project/default_profile.jpg";

    let matchImage = match.image ? `http://127.0.0.1/project/${match.image}` : "http://127.0.0.1/project/default_profile.jpg";

    document.getElementById("myPhoto").src = userImage;
    document.getElementById("matchPhoto").src = matchImage;
    
    document.getElementById("match-popup").style.display = "flex";
      
      // ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î popup
      document.getElementById("close-popup").onclick = function() {
        document.getElementById("match-popup").style.display = "none";
      };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô Popup
  function setMatchPopupImages(match) {
    let basePath = "http://127.0.0.1/project/uploads/";
let userImage = match.myImage ? basePath + match.myImage : basePath + "default_profile.jpg";
let matchImage = match.image ? basePath + match.image : basePath + "default_profile.jpg";

console.log("‚úÖ Path ‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô:", userImage);
console.log("‚úÖ Path ‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå:", matchImage);

document.getElementById("myPhoto").onerror = function() {
    console.error("‚ùå ‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", this.src);
    this.src = "http://127.0.0.1/project/uploads/default_profile.jpg";
};

document.getElementById("matchPhoto").onerror = function() {
    console.error("‚ùå ‡∏£‡∏π‡∏õ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", this.src);
    this.src = "http://127.0.0.1/project/uploads/default_profile.jpg";
};


  }

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå like_match.php ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• match ‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á matches
    fetch("like_match.php", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: "match_id=" + match.id
    })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          console.log("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å matches ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢:", data.message);
        } else {
          console.error("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å matches ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", data.error);
        }
      })
      .catch(err => console.error("Error calling like_match.php:", err));

    // ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Popup ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô)
    loadChatHistory(match);

    // ‡∏õ‡∏∏‡πà‡∏° "‡∏™‡πà‡∏á" ‡πÉ‡∏ô Popup -> ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ chat.php (‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
    const sendBtn = document.getElementById("sendMessageBtn");
    if (sendBtn) {
      sendBtn.onclick = function() {
        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á chat.php
        window.location.href = "chat.php";
      };
    }
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó
  function loadChatHistory(match) {
    fetch(`chat_history.php?match_id=${match.id}`)
      .then(response => response.json())
      .then(data => {
        let chatMessages = document.getElementById("chat-messages");
        if (!chatMessages) return;  // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ DOM ‡∏ô‡∏µ‡πâ

        chatMessages.innerHTML = "";
        data.forEach(msg => {
          let p = document.createElement("p");
          // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ñ‡πâ‡∏≤ sender === "me" ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö sender_id
          p.textContent = (msg.sender === "me" ? "‡∏â‡∏±‡∏ô: " : `${match.name}: `) + msg.message;
          chatMessages.appendChild(p);
        });
      })
      .catch(err => console.error("Error loading chat history:", err));
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏ó)
  function sendChatMessage(match) {
    let inputBox = document.getElementById("chat-input-box");
    if (!inputBox) return;

    let message = inputBox.value.trim();
    if (!message) return;

    // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÑ‡∏ü‡∏•‡πå send_message.php
    fetch("send_message.php", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: `match_id=${match.id}&message=${encodeURIComponent(message)}`
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå input ‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà
          inputBox.value = "";
          loadChatHistory(match);
        } else {
          alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ: " + data.error);
        }
      })
      .catch(err => console.error("Error sending message:", err));
  }




  function recordMatch(match) {
    console.log("üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏°‡∏ï‡∏ä‡πå user2_id =", match.id);

    fetch("save_match.php", {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: "match_id=" + encodeURIComponent(match.id)
    })
    .then(response => response.json())
    .then(data => {
        console.log("üîç Response ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", data);
        if (data.success) {
            alert("üéâ ‡πÅ‡∏°‡∏ï‡∏ä‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");
        } else {
            console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏ï‡∏ä‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", data.error);
            alert("‚ö†Ô∏è " + data.error);
        }
    })
    .catch(err => console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err));
}


  </script>

  <script src="script.js"></script>
  </body>
  </html>